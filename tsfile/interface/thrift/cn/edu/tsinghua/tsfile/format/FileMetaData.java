/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package cn.edu.tsinghua.tsfile.format;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * Description for file metadata
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-11-2")
public class FileMetaData implements org.apache.thrift.TBase<FileMetaData, FileMetaData._Fields>, java.io.Serializable, Cloneable, Comparable<FileMetaData> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("FileMetaData");

  private static final org.apache.thrift.protocol.TField VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("version", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField DELTA_OBJECT_MAP_FIELD_DESC = new org.apache.thrift.protocol.TField("delta_object_map", org.apache.thrift.protocol.TType.MAP, (short)2);
  private static final org.apache.thrift.protocol.TField TIMESERIES_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("timeseries_list", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField JSON_METADATA_FIELD_DESC = new org.apache.thrift.protocol.TField("json_metadata", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField CREATED_BY_FIELD_DESC = new org.apache.thrift.protocol.TField("created_by", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField PROPERTIES_FIELD_DESC = new org.apache.thrift.protocol.TField("properties", org.apache.thrift.protocol.TType.MAP, (short)6);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new FileMetaDataStandardSchemeFactory());
    schemes.put(TupleScheme.class, new FileMetaDataTupleSchemeFactory());
  }

  /**
   * Version of this file *
   */
  public int version; // required
  /**
   * Map stores all delta object name and their info *
   */
  public Map<String,DeltaObject> delta_object_map; // required
  /**
   * TsFile schema for this file.  This schema contains metadata for all the time series. The schema is represented as a list. *
   */
  public List<TimeSeries> timeseries_list; // required
  /**
   * Optional json metadata *
   */
  public List<String> json_metadata; // optional
  /**
   * String for application that wrote this file.  This should be in the format
   * <Application> version <App Version> (build <App Build Hash>).
   * e.g. tsfile version 1.0 (build SHA-1_hash_code)
   * 
   */
  public String created_by; // optional
  /**
   * User specified properties *
   */
  public Map<String,String> properties; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * Version of this file *
     */
    VERSION((short)1, "version"),
    /**
     * Map stores all delta object name and their info *
     */
    DELTA_OBJECT_MAP((short)2, "delta_object_map"),
    /**
     * TsFile schema for this file.  This schema contains metadata for all the time series. The schema is represented as a list. *
     */
    TIMESERIES_LIST((short)3, "timeseries_list"),
    /**
     * Optional json metadata *
     */
    JSON_METADATA((short)4, "json_metadata"),
    /**
     * String for application that wrote this file.  This should be in the format
     * <Application> version <App Version> (build <App Build Hash>).
     * e.g. tsfile version 1.0 (build SHA-1_hash_code)
     * 
     */
    CREATED_BY((short)5, "created_by"),
    /**
     * User specified properties *
     */
    PROPERTIES((short)6, "properties");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // VERSION
          return VERSION;
        case 2: // DELTA_OBJECT_MAP
          return DELTA_OBJECT_MAP;
        case 3: // TIMESERIES_LIST
          return TIMESERIES_LIST;
        case 4: // JSON_METADATA
          return JSON_METADATA;
        case 5: // CREATED_BY
          return CREATED_BY;
        case 6: // PROPERTIES
          return PROPERTIES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __VERSION_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.JSON_METADATA,_Fields.CREATED_BY,_Fields.PROPERTIES};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.VERSION, new org.apache.thrift.meta_data.FieldMetaData("version", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DELTA_OBJECT_MAP, new org.apache.thrift.meta_data.FieldMetaData("delta_object_map", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DeltaObject.class))));
    tmpMap.put(_Fields.TIMESERIES_LIST, new org.apache.thrift.meta_data.FieldMetaData("timeseries_list", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TimeSeries.class))));
    tmpMap.put(_Fields.JSON_METADATA, new org.apache.thrift.meta_data.FieldMetaData("json_metadata", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.CREATED_BY, new org.apache.thrift.meta_data.FieldMetaData("created_by", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROPERTIES, new org.apache.thrift.meta_data.FieldMetaData("properties", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(FileMetaData.class, metaDataMap);
  }

  public FileMetaData() {
  }

  public FileMetaData(
    int version,
    Map<String,DeltaObject> delta_object_map,
    List<TimeSeries> timeseries_list)
  {
    this();
    this.version = version;
    setVersionIsSet(true);
    this.delta_object_map = delta_object_map;
    this.timeseries_list = timeseries_list;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public FileMetaData(FileMetaData other) {
    __isset_bitfield = other.__isset_bitfield;
    this.version = other.version;
    if (other.isSetDelta_object_map()) {
      Map<String,DeltaObject> __this__delta_object_map = new HashMap<String,DeltaObject>(other.delta_object_map.size());
      for (Map.Entry<String, DeltaObject> other_element : other.delta_object_map.entrySet()) {

        String other_element_key = other_element.getKey();
        DeltaObject other_element_value = other_element.getValue();

        String __this__delta_object_map_copy_key = other_element_key;

        DeltaObject __this__delta_object_map_copy_value = new DeltaObject(other_element_value);

        __this__delta_object_map.put(__this__delta_object_map_copy_key, __this__delta_object_map_copy_value);
      }
      this.delta_object_map = __this__delta_object_map;
    }
    if (other.isSetTimeseries_list()) {
      List<TimeSeries> __this__timeseries_list = new ArrayList<TimeSeries>(other.timeseries_list.size());
      for (TimeSeries other_element : other.timeseries_list) {
        __this__timeseries_list.add(new TimeSeries(other_element));
      }
      this.timeseries_list = __this__timeseries_list;
    }
    if (other.isSetJson_metadata()) {
      List<String> __this__json_metadata = new ArrayList<String>(other.json_metadata);
      this.json_metadata = __this__json_metadata;
    }
    if (other.isSetCreated_by()) {
      this.created_by = other.created_by;
    }
    if (other.isSetProperties()) {
      Map<String,String> __this__properties = new HashMap<String,String>(other.properties);
      this.properties = __this__properties;
    }
  }

  public FileMetaData deepCopy() {
    return new FileMetaData(this);
  }

  @Override
  public void clear() {
    setVersionIsSet(false);
    this.version = 0;
    this.delta_object_map = null;
    this.timeseries_list = null;
    this.json_metadata = null;
    this.created_by = null;
    this.properties = null;
  }

  /**
   * Version of this file *
   */
  public int getVersion() {
    return this.version;
  }

  /**
   * Version of this file *
   */
  public FileMetaData setVersion(int version) {
    this.version = version;
    setVersionIsSet(true);
    return this;
  }

  public void unsetVersion() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VERSION_ISSET_ID);
  }

  /** Returns true if field version is set (has been assigned a value) and false otherwise */
  public boolean isSetVersion() {
    return EncodingUtils.testBit(__isset_bitfield, __VERSION_ISSET_ID);
  }

  public void setVersionIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VERSION_ISSET_ID, value);
  }

  public int getDelta_object_mapSize() {
    return (this.delta_object_map == null) ? 0 : this.delta_object_map.size();
  }

  public void putToDelta_object_map(String key, DeltaObject val) {
    if (this.delta_object_map == null) {
      this.delta_object_map = new HashMap<String,DeltaObject>();
    }
    this.delta_object_map.put(key, val);
  }

  /**
   * Map stores all delta object name and their info *
   */
  public Map<String,DeltaObject> getDelta_object_map() {
    return this.delta_object_map;
  }

  /**
   * Map stores all delta object name and their info *
   */
  public FileMetaData setDelta_object_map(Map<String,DeltaObject> delta_object_map) {
    this.delta_object_map = delta_object_map;
    return this;
  }

  public void unsetDelta_object_map() {
    this.delta_object_map = null;
  }

  /** Returns true if field delta_object_map is set (has been assigned a value) and false otherwise */
  public boolean isSetDelta_object_map() {
    return this.delta_object_map != null;
  }

  public void setDelta_object_mapIsSet(boolean value) {
    if (!value) {
      this.delta_object_map = null;
    }
  }

  public int getTimeseries_listSize() {
    return (this.timeseries_list == null) ? 0 : this.timeseries_list.size();
  }

  public java.util.Iterator<TimeSeries> getTimeseries_listIterator() {
    return (this.timeseries_list == null) ? null : this.timeseries_list.iterator();
  }

  public void addToTimeseries_list(TimeSeries elem) {
    if (this.timeseries_list == null) {
      this.timeseries_list = new ArrayList<TimeSeries>();
    }
    this.timeseries_list.add(elem);
  }

  /**
   * TsFile schema for this file.  This schema contains metadata for all the time series. The schema is represented as a list. *
   */
  public List<TimeSeries> getTimeseries_list() {
    return this.timeseries_list;
  }

  /**
   * TsFile schema for this file.  This schema contains metadata for all the time series. The schema is represented as a list. *
   */
  public FileMetaData setTimeseries_list(List<TimeSeries> timeseries_list) {
    this.timeseries_list = timeseries_list;
    return this;
  }

  public void unsetTimeseries_list() {
    this.timeseries_list = null;
  }

  /** Returns true if field timeseries_list is set (has been assigned a value) and false otherwise */
  public boolean isSetTimeseries_list() {
    return this.timeseries_list != null;
  }

  public void setTimeseries_listIsSet(boolean value) {
    if (!value) {
      this.timeseries_list = null;
    }
  }

  public int getJson_metadataSize() {
    return (this.json_metadata == null) ? 0 : this.json_metadata.size();
  }

  public java.util.Iterator<String> getJson_metadataIterator() {
    return (this.json_metadata == null) ? null : this.json_metadata.iterator();
  }

  public void addToJson_metadata(String elem) {
    if (this.json_metadata == null) {
      this.json_metadata = new ArrayList<String>();
    }
    this.json_metadata.add(elem);
  }

  /**
   * Optional json metadata *
   */
  public List<String> getJson_metadata() {
    return this.json_metadata;
  }

  /**
   * Optional json metadata *
   */
  public FileMetaData setJson_metadata(List<String> json_metadata) {
    this.json_metadata = json_metadata;
    return this;
  }

  public void unsetJson_metadata() {
    this.json_metadata = null;
  }

  /** Returns true if field json_metadata is set (has been assigned a value) and false otherwise */
  public boolean isSetJson_metadata() {
    return this.json_metadata != null;
  }

  public void setJson_metadataIsSet(boolean value) {
    if (!value) {
      this.json_metadata = null;
    }
  }

  /**
   * String for application that wrote this file.  This should be in the format
   * <Application> version <App Version> (build <App Build Hash>).
   * e.g. tsfile version 1.0 (build SHA-1_hash_code)
   * 
   */
  public String getCreated_by() {
    return this.created_by;
  }

  /**
   * String for application that wrote this file.  This should be in the format
   * <Application> version <App Version> (build <App Build Hash>).
   * e.g. tsfile version 1.0 (build SHA-1_hash_code)
   * 
   */
  public FileMetaData setCreated_by(String created_by) {
    this.created_by = created_by;
    return this;
  }

  public void unsetCreated_by() {
    this.created_by = null;
  }

  /** Returns true if field created_by is set (has been assigned a value) and false otherwise */
  public boolean isSetCreated_by() {
    return this.created_by != null;
  }

  public void setCreated_byIsSet(boolean value) {
    if (!value) {
      this.created_by = null;
    }
  }

  public int getPropertiesSize() {
    return (this.properties == null) ? 0 : this.properties.size();
  }

  public void putToProperties(String key, String val) {
    if (this.properties == null) {
      this.properties = new HashMap<String,String>();
    }
    this.properties.put(key, val);
  }

  /**
   * User specified properties *
   */
  public Map<String,String> getProperties() {
    return this.properties;
  }

  /**
   * User specified properties *
   */
  public FileMetaData setProperties(Map<String,String> properties) {
    this.properties = properties;
    return this;
  }

  public void unsetProperties() {
    this.properties = null;
  }

  /** Returns true if field properties is set (has been assigned a value) and false otherwise */
  public boolean isSetProperties() {
    return this.properties != null;
  }

  public void setPropertiesIsSet(boolean value) {
    if (!value) {
      this.properties = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case VERSION:
      if (value == null) {
        unsetVersion();
      } else {
        setVersion((Integer)value);
      }
      break;

    case DELTA_OBJECT_MAP:
      if (value == null) {
        unsetDelta_object_map();
      } else {
        setDelta_object_map((Map<String,DeltaObject>)value);
      }
      break;

    case TIMESERIES_LIST:
      if (value == null) {
        unsetTimeseries_list();
      } else {
        setTimeseries_list((List<TimeSeries>)value);
      }
      break;

    case JSON_METADATA:
      if (value == null) {
        unsetJson_metadata();
      } else {
        setJson_metadata((List<String>)value);
      }
      break;

    case CREATED_BY:
      if (value == null) {
        unsetCreated_by();
      } else {
        setCreated_by((String)value);
      }
      break;

    case PROPERTIES:
      if (value == null) {
        unsetProperties();
      } else {
        setProperties((Map<String,String>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case VERSION:
      return Integer.valueOf(getVersion());

    case DELTA_OBJECT_MAP:
      return getDelta_object_map();

    case TIMESERIES_LIST:
      return getTimeseries_list();

    case JSON_METADATA:
      return getJson_metadata();

    case CREATED_BY:
      return getCreated_by();

    case PROPERTIES:
      return getProperties();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case VERSION:
      return isSetVersion();
    case DELTA_OBJECT_MAP:
      return isSetDelta_object_map();
    case TIMESERIES_LIST:
      return isSetTimeseries_list();
    case JSON_METADATA:
      return isSetJson_metadata();
    case CREATED_BY:
      return isSetCreated_by();
    case PROPERTIES:
      return isSetProperties();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof FileMetaData)
      return this.equals((FileMetaData)that);
    return false;
  }

  public boolean equals(FileMetaData that) {
    if (that == null)
      return false;

    boolean this_present_version = true;
    boolean that_present_version = true;
    if (this_present_version || that_present_version) {
      if (!(this_present_version && that_present_version))
        return false;
      if (this.version != that.version)
        return false;
    }

    boolean this_present_delta_object_map = true && this.isSetDelta_object_map();
    boolean that_present_delta_object_map = true && that.isSetDelta_object_map();
    if (this_present_delta_object_map || that_present_delta_object_map) {
      if (!(this_present_delta_object_map && that_present_delta_object_map))
        return false;
      if (!this.delta_object_map.equals(that.delta_object_map))
        return false;
    }

    boolean this_present_timeseries_list = true && this.isSetTimeseries_list();
    boolean that_present_timeseries_list = true && that.isSetTimeseries_list();
    if (this_present_timeseries_list || that_present_timeseries_list) {
      if (!(this_present_timeseries_list && that_present_timeseries_list))
        return false;
      if (!this.timeseries_list.equals(that.timeseries_list))
        return false;
    }

    boolean this_present_json_metadata = true && this.isSetJson_metadata();
    boolean that_present_json_metadata = true && that.isSetJson_metadata();
    if (this_present_json_metadata || that_present_json_metadata) {
      if (!(this_present_json_metadata && that_present_json_metadata))
        return false;
      if (!this.json_metadata.equals(that.json_metadata))
        return false;
    }

    boolean this_present_created_by = true && this.isSetCreated_by();
    boolean that_present_created_by = true && that.isSetCreated_by();
    if (this_present_created_by || that_present_created_by) {
      if (!(this_present_created_by && that_present_created_by))
        return false;
      if (!this.created_by.equals(that.created_by))
        return false;
    }

    boolean this_present_properties = true && this.isSetProperties();
    boolean that_present_properties = true && that.isSetProperties();
    if (this_present_properties || that_present_properties) {
      if (!(this_present_properties && that_present_properties))
        return false;
      if (!this.properties.equals(that.properties))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_version = true;
    list.add(present_version);
    if (present_version)
      list.add(version);

    boolean present_delta_object_map = true && (isSetDelta_object_map());
    list.add(present_delta_object_map);
    if (present_delta_object_map)
      list.add(delta_object_map);

    boolean present_timeseries_list = true && (isSetTimeseries_list());
    list.add(present_timeseries_list);
    if (present_timeseries_list)
      list.add(timeseries_list);

    boolean present_json_metadata = true && (isSetJson_metadata());
    list.add(present_json_metadata);
    if (present_json_metadata)
      list.add(json_metadata);

    boolean present_created_by = true && (isSetCreated_by());
    list.add(present_created_by);
    if (present_created_by)
      list.add(created_by);

    boolean present_properties = true && (isSetProperties());
    list.add(present_properties);
    if (present_properties)
      list.add(properties);

    return list.hashCode();
  }

  @Override
  public int compareTo(FileMetaData other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetVersion()).compareTo(other.isSetVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.version, other.version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDelta_object_map()).compareTo(other.isSetDelta_object_map());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDelta_object_map()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.delta_object_map, other.delta_object_map);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTimeseries_list()).compareTo(other.isSetTimeseries_list());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTimeseries_list()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timeseries_list, other.timeseries_list);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJson_metadata()).compareTo(other.isSetJson_metadata());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJson_metadata()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.json_metadata, other.json_metadata);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreated_by()).compareTo(other.isSetCreated_by());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreated_by()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.created_by, other.created_by);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProperties()).compareTo(other.isSetProperties());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProperties()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.properties, other.properties);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("FileMetaData(");
    boolean first = true;

    sb.append("version:");
    sb.append(this.version);
    first = false;
    if (!first) sb.append(", ");
    sb.append("delta_object_map:");
    if (this.delta_object_map == null) {
      sb.append("null");
    } else {
      sb.append(this.delta_object_map);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("timeseries_list:");
    if (this.timeseries_list == null) {
      sb.append("null");
    } else {
      sb.append(this.timeseries_list);
    }
    first = false;
    if (isSetJson_metadata()) {
      if (!first) sb.append(", ");
      sb.append("json_metadata:");
      if (this.json_metadata == null) {
        sb.append("null");
      } else {
        sb.append(this.json_metadata);
      }
      first = false;
    }
    if (isSetCreated_by()) {
      if (!first) sb.append(", ");
      sb.append("created_by:");
      if (this.created_by == null) {
        sb.append("null");
      } else {
        sb.append(this.created_by);
      }
      first = false;
    }
    if (isSetProperties()) {
      if (!first) sb.append(", ");
      sb.append("properties:");
      if (this.properties == null) {
        sb.append("null");
      } else {
        sb.append(this.properties);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'version' because it's a primitive and you chose the non-beans generator.
    if (delta_object_map == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'delta_object_map' was not present! Struct: " + toString());
    }
    if (timeseries_list == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'timeseries_list' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class FileMetaDataStandardSchemeFactory implements SchemeFactory {
    public FileMetaDataStandardScheme getScheme() {
      return new FileMetaDataStandardScheme();
    }
  }

  private static class FileMetaDataStandardScheme extends StandardScheme<FileMetaData> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, FileMetaData struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.version = iprot.readI32();
              struct.setVersionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DELTA_OBJECT_MAP
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map72 = iprot.readMapBegin();
                struct.delta_object_map = new HashMap<String,DeltaObject>(2*_map72.size);
                String _key73;
                DeltaObject _val74;
                for (int _i75 = 0; _i75 < _map72.size; ++_i75)
                {
                  _key73 = iprot.readString();
                  _val74 = new DeltaObject();
                  _val74.read(iprot);
                  struct.delta_object_map.put(_key73, _val74);
                }
                iprot.readMapEnd();
              }
              struct.setDelta_object_mapIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TIMESERIES_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list76 = iprot.readListBegin();
                struct.timeseries_list = new ArrayList<TimeSeries>(_list76.size);
                TimeSeries _elem77;
                for (int _i78 = 0; _i78 < _list76.size; ++_i78)
                {
                  _elem77 = new TimeSeries();
                  _elem77.read(iprot);
                  struct.timeseries_list.add(_elem77);
                }
                iprot.readListEnd();
              }
              struct.setTimeseries_listIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // JSON_METADATA
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list79 = iprot.readListBegin();
                struct.json_metadata = new ArrayList<String>(_list79.size);
                String _elem80;
                for (int _i81 = 0; _i81 < _list79.size; ++_i81)
                {
                  _elem80 = iprot.readString();
                  struct.json_metadata.add(_elem80);
                }
                iprot.readListEnd();
              }
              struct.setJson_metadataIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CREATED_BY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.created_by = iprot.readString();
              struct.setCreated_byIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PROPERTIES
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map82 = iprot.readMapBegin();
                struct.properties = new HashMap<String,String>(2*_map82.size);
                String _key83;
                String _val84;
                for (int _i85 = 0; _i85 < _map82.size; ++_i85)
                {
                  _key83 = iprot.readString();
                  _val84 = iprot.readString();
                  struct.properties.put(_key83, _val84);
                }
                iprot.readMapEnd();
              }
              struct.setPropertiesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetVersion()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'version' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, FileMetaData struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(VERSION_FIELD_DESC);
      oprot.writeI32(struct.version);
      oprot.writeFieldEnd();
      if (struct.delta_object_map != null) {
        oprot.writeFieldBegin(DELTA_OBJECT_MAP_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, struct.delta_object_map.size()));
          for (Map.Entry<String, DeltaObject> _iter86 : struct.delta_object_map.entrySet())
          {
            oprot.writeString(_iter86.getKey());
            _iter86.getValue().write(oprot);
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.timeseries_list != null) {
        oprot.writeFieldBegin(TIMESERIES_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.timeseries_list.size()));
          for (TimeSeries _iter87 : struct.timeseries_list)
          {
            _iter87.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.json_metadata != null) {
        if (struct.isSetJson_metadata()) {
          oprot.writeFieldBegin(JSON_METADATA_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.json_metadata.size()));
            for (String _iter88 : struct.json_metadata)
            {
              oprot.writeString(_iter88);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.created_by != null) {
        if (struct.isSetCreated_by()) {
          oprot.writeFieldBegin(CREATED_BY_FIELD_DESC);
          oprot.writeString(struct.created_by);
          oprot.writeFieldEnd();
        }
      }
      if (struct.properties != null) {
        if (struct.isSetProperties()) {
          oprot.writeFieldBegin(PROPERTIES_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.properties.size()));
            for (Map.Entry<String, String> _iter89 : struct.properties.entrySet())
            {
              oprot.writeString(_iter89.getKey());
              oprot.writeString(_iter89.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FileMetaDataTupleSchemeFactory implements SchemeFactory {
    public FileMetaDataTupleScheme getScheme() {
      return new FileMetaDataTupleScheme();
    }
  }

  private static class FileMetaDataTupleScheme extends TupleScheme<FileMetaData> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, FileMetaData struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeI32(struct.version);
      {
        oprot.writeI32(struct.delta_object_map.size());
        for (Map.Entry<String, DeltaObject> _iter90 : struct.delta_object_map.entrySet())
        {
          oprot.writeString(_iter90.getKey());
          _iter90.getValue().write(oprot);
        }
      }
      {
        oprot.writeI32(struct.timeseries_list.size());
        for (TimeSeries _iter91 : struct.timeseries_list)
        {
          _iter91.write(oprot);
        }
      }
      BitSet optionals = new BitSet();
      if (struct.isSetJson_metadata()) {
        optionals.set(0);
      }
      if (struct.isSetCreated_by()) {
        optionals.set(1);
      }
      if (struct.isSetProperties()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetJson_metadata()) {
        {
          oprot.writeI32(struct.json_metadata.size());
          for (String _iter92 : struct.json_metadata)
          {
            oprot.writeString(_iter92);
          }
        }
      }
      if (struct.isSetCreated_by()) {
        oprot.writeString(struct.created_by);
      }
      if (struct.isSetProperties()) {
        {
          oprot.writeI32(struct.properties.size());
          for (Map.Entry<String, String> _iter93 : struct.properties.entrySet())
          {
            oprot.writeString(_iter93.getKey());
            oprot.writeString(_iter93.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, FileMetaData struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.version = iprot.readI32();
      struct.setVersionIsSet(true);
      {
        org.apache.thrift.protocol.TMap _map94 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct.delta_object_map = new HashMap<String,DeltaObject>(2*_map94.size);
        String _key95;
        DeltaObject _val96;
        for (int _i97 = 0; _i97 < _map94.size; ++_i97)
        {
          _key95 = iprot.readString();
          _val96 = new DeltaObject();
          _val96.read(iprot);
          struct.delta_object_map.put(_key95, _val96);
        }
      }
      struct.setDelta_object_mapIsSet(true);
      {
        org.apache.thrift.protocol.TList _list98 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct.timeseries_list = new ArrayList<TimeSeries>(_list98.size);
        TimeSeries _elem99;
        for (int _i100 = 0; _i100 < _list98.size; ++_i100)
        {
          _elem99 = new TimeSeries();
          _elem99.read(iprot);
          struct.timeseries_list.add(_elem99);
        }
      }
      struct.setTimeseries_listIsSet(true);
      BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list101 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.json_metadata = new ArrayList<String>(_list101.size);
          String _elem102;
          for (int _i103 = 0; _i103 < _list101.size; ++_i103)
          {
            _elem102 = iprot.readString();
            struct.json_metadata.add(_elem102);
          }
        }
        struct.setJson_metadataIsSet(true);
      }
      if (incoming.get(1)) {
        struct.created_by = iprot.readString();
        struct.setCreated_byIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TMap _map104 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.properties = new HashMap<String,String>(2*_map104.size);
          String _key105;
          String _val106;
          for (int _i107 = 0; _i107 < _map104.size; ++_i107)
          {
            _key105 = iprot.readString();
            _val106 = iprot.readString();
            struct.properties.put(_key105, _val106);
          }
        }
        struct.setPropertiesIsSet(true);
      }
    }
  }

}

