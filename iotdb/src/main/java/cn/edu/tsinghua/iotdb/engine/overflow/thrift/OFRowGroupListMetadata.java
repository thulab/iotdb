/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package cn.edu.tsinghua.iotdb.engine.overflow.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-03-16")
public class OFRowGroupListMetadata implements org.apache.thrift.TBase<OFRowGroupListMetadata, OFRowGroupListMetadata._Fields>, java.io.Serializable, Cloneable, Comparable<OFRowGroupListMetadata> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OFRowGroupListMetadata");

  private static final org.apache.thrift.protocol.TField MEASUREMENT_METADATA_FIELD_DESC = new org.apache.thrift.protocol.TField("measurement_metadata", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField DELTA_OBJECT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("deltaObject_id", org.apache.thrift.protocol.TType.STRING, (short)2);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new OFRowGroupListMetadataStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new OFRowGroupListMetadataTupleSchemeFactory();

  public java.util.List<OFSeriesListMetadata> measurement_metadata; // required
  public java.lang.String deltaObject_id; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    MEASUREMENT_METADATA((short)1, "measurement_metadata"),
    DELTA_OBJECT_ID((short)2, "deltaObject_id");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // MEASUREMENT_METADATA
          return MEASUREMENT_METADATA;
        case 2: // DELTA_OBJECT_ID
          return DELTA_OBJECT_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.MEASUREMENT_METADATA, new org.apache.thrift.meta_data.FieldMetaData("measurement_metadata", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, OFSeriesListMetadata.class))));
    tmpMap.put(_Fields.DELTA_OBJECT_ID, new org.apache.thrift.meta_data.FieldMetaData("deltaObject_id", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OFRowGroupListMetadata.class, metaDataMap);
  }

  public OFRowGroupListMetadata() {
  }

  public OFRowGroupListMetadata(
    java.util.List<OFSeriesListMetadata> measurement_metadata,
    java.lang.String deltaObject_id)
  {
    this();
    this.measurement_metadata = measurement_metadata;
    this.deltaObject_id = deltaObject_id;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OFRowGroupListMetadata(OFRowGroupListMetadata other) {
    if (other.isSetMeasurement_metadata()) {
      java.util.List<OFSeriesListMetadata> __this__measurement_metadata = new java.util.ArrayList<OFSeriesListMetadata>(other.measurement_metadata.size());
      for (OFSeriesListMetadata other_element : other.measurement_metadata) {
        __this__measurement_metadata.add(new OFSeriesListMetadata(other_element));
      }
      this.measurement_metadata = __this__measurement_metadata;
    }
    if (other.isSetDeltaObject_id()) {
      this.deltaObject_id = other.deltaObject_id;
    }
  }

  public OFRowGroupListMetadata deepCopy() {
    return new OFRowGroupListMetadata(this);
  }

  @Override
  public void clear() {
    this.measurement_metadata = null;
    this.deltaObject_id = null;
  }

  public int getMeasurement_metadataSize() {
    return (this.measurement_metadata == null) ? 0 : this.measurement_metadata.size();
  }

  public java.util.Iterator<OFSeriesListMetadata> getMeasurement_metadataIterator() {
    return (this.measurement_metadata == null) ? null : this.measurement_metadata.iterator();
  }

  public void addToMeasurement_metadata(OFSeriesListMetadata elem) {
    if (this.measurement_metadata == null) {
      this.measurement_metadata = new java.util.ArrayList<OFSeriesListMetadata>();
    }
    this.measurement_metadata.add(elem);
  }

  public java.util.List<OFSeriesListMetadata> getMeasurement_metadata() {
    return this.measurement_metadata;
  }

  public OFRowGroupListMetadata setMeasurement_metadata(java.util.List<OFSeriesListMetadata> measurement_metadata) {
    this.measurement_metadata = measurement_metadata;
    return this;
  }

  public void unsetMeasurement_metadata() {
    this.measurement_metadata = null;
  }

  /** Returns true if field measurement_metadata is set (has been assigned a value) and false otherwise */
  public boolean isSetMeasurement_metadata() {
    return this.measurement_metadata != null;
  }

  public void setMeasurement_metadataIsSet(boolean value) {
    if (!value) {
      this.measurement_metadata = null;
    }
  }

  public java.lang.String getDeltaObject_id() {
    return this.deltaObject_id;
  }

  public OFRowGroupListMetadata setDeltaObject_id(java.lang.String deltaObject_id) {
    this.deltaObject_id = deltaObject_id;
    return this;
  }

  public void unsetDeltaObject_id() {
    this.deltaObject_id = null;
  }

  /** Returns true if field deltaObject_id is set (has been assigned a value) and false otherwise */
  public boolean isSetDeltaObject_id() {
    return this.deltaObject_id != null;
  }

  public void setDeltaObject_idIsSet(boolean value) {
    if (!value) {
      this.deltaObject_id = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case MEASUREMENT_METADATA:
      if (value == null) {
        unsetMeasurement_metadata();
      } else {
        setMeasurement_metadata((java.util.List<OFSeriesListMetadata>)value);
      }
      break;

    case DELTA_OBJECT_ID:
      if (value == null) {
        unsetDeltaObject_id();
      } else {
        setDeltaObject_id((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case MEASUREMENT_METADATA:
      return getMeasurement_metadata();

    case DELTA_OBJECT_ID:
      return getDeltaObject_id();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case MEASUREMENT_METADATA:
      return isSetMeasurement_metadata();
    case DELTA_OBJECT_ID:
      return isSetDeltaObject_id();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof OFRowGroupListMetadata)
      return this.equals((OFRowGroupListMetadata)that);
    return false;
  }

  public boolean equals(OFRowGroupListMetadata that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_measurement_metadata = true && this.isSetMeasurement_metadata();
    boolean that_present_measurement_metadata = true && that.isSetMeasurement_metadata();
    if (this_present_measurement_metadata || that_present_measurement_metadata) {
      if (!(this_present_measurement_metadata && that_present_measurement_metadata))
        return false;
      if (!this.measurement_metadata.equals(that.measurement_metadata))
        return false;
    }

    boolean this_present_deltaObject_id = true && this.isSetDeltaObject_id();
    boolean that_present_deltaObject_id = true && that.isSetDeltaObject_id();
    if (this_present_deltaObject_id || that_present_deltaObject_id) {
      if (!(this_present_deltaObject_id && that_present_deltaObject_id))
        return false;
      if (!this.deltaObject_id.equals(that.deltaObject_id))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetMeasurement_metadata()) ? 131071 : 524287);
    if (isSetMeasurement_metadata())
      hashCode = hashCode * 8191 + measurement_metadata.hashCode();

    hashCode = hashCode * 8191 + ((isSetDeltaObject_id()) ? 131071 : 524287);
    if (isSetDeltaObject_id())
      hashCode = hashCode * 8191 + deltaObject_id.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(OFRowGroupListMetadata other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetMeasurement_metadata()).compareTo(other.isSetMeasurement_metadata());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMeasurement_metadata()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.measurement_metadata, other.measurement_metadata);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDeltaObject_id()).compareTo(other.isSetDeltaObject_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeltaObject_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deltaObject_id, other.deltaObject_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("OFRowGroupListMetadata(");
    boolean first = true;

    sb.append("measurement_metadata:");
    if (this.measurement_metadata == null) {
      sb.append("null");
    } else {
      sb.append(this.measurement_metadata);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("deltaObject_id:");
    if (this.deltaObject_id == null) {
      sb.append("null");
    } else {
      sb.append(this.deltaObject_id);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (measurement_metadata == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'measurement_metadata' was not present! Struct: " + toString());
    }
    if (deltaObject_id == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'deltaObject_id' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OFRowGroupListMetadataStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public OFRowGroupListMetadataStandardScheme getScheme() {
      return new OFRowGroupListMetadataStandardScheme();
    }
  }

  private static class OFRowGroupListMetadataStandardScheme extends org.apache.thrift.scheme.StandardScheme<OFRowGroupListMetadata> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OFRowGroupListMetadata struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // MEASUREMENT_METADATA
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list96 = iprot.readListBegin();
                struct.measurement_metadata = new java.util.ArrayList<OFSeriesListMetadata>(_list96.size);
                OFSeriesListMetadata _elem97;
                for (int _i98 = 0; _i98 < _list96.size; ++_i98)
                {
                  _elem97 = new OFSeriesListMetadata();
                  _elem97.read(iprot);
                  struct.measurement_metadata.add(_elem97);
                }
                iprot.readListEnd();
              }
              struct.setMeasurement_metadataIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DELTA_OBJECT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deltaObject_id = iprot.readString();
              struct.setDeltaObject_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OFRowGroupListMetadata struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.measurement_metadata != null) {
        oprot.writeFieldBegin(MEASUREMENT_METADATA_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.measurement_metadata.size()));
          for (OFSeriesListMetadata _iter99 : struct.measurement_metadata)
          {
            _iter99.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.deltaObject_id != null) {
        oprot.writeFieldBegin(DELTA_OBJECT_ID_FIELD_DESC);
        oprot.writeString(struct.deltaObject_id);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OFRowGroupListMetadataTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public OFRowGroupListMetadataTupleScheme getScheme() {
      return new OFRowGroupListMetadataTupleScheme();
    }
  }

  private static class OFRowGroupListMetadataTupleScheme extends org.apache.thrift.scheme.TupleScheme<OFRowGroupListMetadata> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OFRowGroupListMetadata struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      {
        oprot.writeI32(struct.measurement_metadata.size());
        for (OFSeriesListMetadata _iter100 : struct.measurement_metadata)
        {
          _iter100.write(oprot);
        }
      }
      oprot.writeString(struct.deltaObject_id);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OFRowGroupListMetadata struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      {
        org.apache.thrift.protocol.TList _list101 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct.measurement_metadata = new java.util.ArrayList<OFSeriesListMetadata>(_list101.size);
        OFSeriesListMetadata _elem102;
        for (int _i103 = 0; _i103 < _list101.size; ++_i103)
        {
          _elem102 = new OFSeriesListMetadata();
          _elem102.read(iprot);
          struct.measurement_metadata.add(_elem102);
        }
      }
      struct.setMeasurement_metadataIsSet(true);
      struct.deltaObject_id = iprot.readString();
      struct.setDeltaObject_idIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

